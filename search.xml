<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Zepto 源码分析]]></title>
    <url>%2Fa%2F17070716%2F</url>
    <content type="text"><![CDATA[想 游刃有余 如鱼得水得 一清二楚 机制原理 1234567var Zepto = (function() &#123; // core&#125;)()// If `$` is not yet defined, point it to `Zepto`window.Zepto = Zeptowindow.$ === undefined &amp;&amp; (window.$ = Zepto) Zepto是一个轻量级的针对现代高级浏览器的JavaScript库， 它与jquery有着类似的api， 但主要针对移动端。 这两天看了看 Zepto 源码本想着自己分析下 Zepto 的代码结构、内部工具函数、文档操作等，但是发现下面这位前辈分析的更加透彻，在这里分享下。但是前辈目前只是分享了 Zepto.js 未分享其他模块、如 Ajax 、 Event 、 Detect 、 Touch 、 Effects 、 Form 等 详情见 读 Zepto 源码系列 👍]]></content>
      <categories>
        <category>源码分析</category>
      </categories>
      <tags>
        <tag>zepto</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我在微博专题系列]]></title>
    <url>%2Fa%2F17062510%2F</url>
    <content type="text"><![CDATA[随时随地发现新鲜事!微博带你欣赏世界上每一个精彩瞬间,了解每一个幕后故事。分享你想表达的,让全世界都能听到你的心声! 我在微博专题系列 微博是我第一份实习工作，也是我喜欢做的一份工作。在微博时间里，学习了很多，也看到自己还有很多不懂不会，在这里我将记录我学习的内容以及在工作中常见问题的解决方案，涉及内容包含不限于PHP性能、分布式系统、服务高可用高性能、系统安全、常用工具使用技巧等 PHP 应用性能提升 PHP7 新特性 提升数据库性能]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>我在微博</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP7 新特性]]></title>
    <url>%2Fa%2F17062409%2F</url>
    <content type="text"><![CDATA[PHP7 具有很多用语编写高性能、高效率代码的新特性，同时也已出了一些历史版本中过时的特性，这些过时的特性如果在PHP7中使用会出发一个 Error 错误。目前大多数的 Fatal 错误都是可以异常捕获，所以 PHP 不再显示一些不标准的 Fatal 错误 取而代之的一个携带很多可用的信息异常。 PHP 各版本性能分析 PHP7 包含不限于如下新特性： 类型声明 命名空间的集体声明 匿名类 老式构造函数的摒弃 太空飞船操作符 null 合并运算符 uniform 变量语法 官方文档 PHP7新特性]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[提升数据库性能]]></title>
    <url>%2Fa%2F17062408%2F</url>
    <content type="text"><![CDATA[数据库在动态网站扮演者关键角色，所有的流入流出的数据都会和数据库进行交互。 优化 PHP 应用数据库的各种方法，包含不限于 Mysql查询缓存（Query-Caching）进入 MySql 输入命令 show variables like ‘have_query_cache’; 查询缓存是 MySql 的一个重要性能特性，他缓存了 selete 查询及查询结果集，当同一个 selete 语句查询时， MySQL 直接从内存中直接取出结果。这样，可以提高执行速度，同时减轻数据库的压力。 如何开启（默认是开启的）呢？ 1234567打开 my.conf 文件query_cache_type = 1 // 0 为禁用query_cache_size = 128MB // 将会分配内存大小query_cache_limit = 1MB //定义能被缓存查询结果的最大体积 MyISAM 和 InnoDB 存储引擎区别 - MySql InnoDB 锁 表级锁 行级锁 外键 ❌ ✅ 事物 ❌ ✅ 全文检索 ✅ ❌ 数据压缩、自我复制 ✅ ✅ 查询缓存、数据加密 ✅ ✅ 集群 ❌ ✅ InnoDB 的几个重要配置参数 innodb_buffer_pool_size 该配置定义了 InnoDB 数据和载入内存的索引可以使用多少内存空间。对于一个 “全职” 的 MySql 服务器，推荐此配置值为服务器安装内存的 50%～80%。 innodb_buffer_pool_instances innodb_log_file_size InnoDB 是事物安全的 MySql 的引擎索引，设计上采用类似于 Oracle 数据架构设计。通常来说，InnoDB 存储引擎是OLTP应用中核心表的首选核心引擎。同时也正是 InnoDB 的存在，才使 MySql 数据库变得更加有魅力。 InnoDB 体系架构 从图中可看出，InnoDB 存储引擎有很多个内存块，可以认为许多内存块组成了一个大的内存池，由他们维护所有进程；线程需要访问的多个内部数据结构；缓存磁盘数据，方便快速地读取；同时在对磁盘文件的数据修改之前在这里缓存；重做日志（redo log）缓冲……后台线程主要负责刷新内存池中的数据，保证缓冲池中的内存缓存的是最近的数据。此外将已修改的数据文件刷新到磁盘文件，保证数据在发生异常时 InnoDB 能够恢复到正常运行状态。 InnoDB 关键特性 插入缓冲（Insert Buffer） 两次写（Double Write） 自适应哈希索引（Adaptive Hash Index） 异步IO（Async IO） 刷新临接页（Flush Neighbor Page） 聚集索引（primary key）InnoDB的主键（primary key）是用到的最多的聚集索引，表中数据按照主键顺序存放，其值自动增长且不需要磁盘的随机读取。因此，对于这类的插入操作速度非常快。 联合索引（key）对表的多个列进行索引、例如 1234567891011121314151617(a, b) select * from table_name where a = ? and b = ?; ✅select * from table_name where a = ? ORDER BY b;(因为在联合索引中b已经经过排序) ✅(a, b, c)select * from table_name where a = ? and b = ?; ✅select * from table_name where a = ? and b = ? ORDER BY c; ✅select * from table_name where a = ? and b in (?,?) and c = ?; ✅下面这句SQL联合索引不能够直接得到结果，还需要执行一次排序select * from table_name where a = ? ORDER BY c; ❌//联合索引越靠近左侧越优先匹配，其中的列不可以被跳过（如上一句SQL）。select * from table_name where a = ? and c = ? and b in (?,?) ✅select * from table_name where a = ? and b in (?,?) ORDER BY c; ❌ (按照 c 做一个排序 尽管索引中含c，但b会存在多种情况，最终不会起作用，所以查询还会做一个排序) 锁和事务锁 InnoDB 存储引擎会在行级别上对表数据上锁，数据库中可以在多个地方使用，可以不同资源提供并发访问。虽然锁定机制可以实现事务的隔离要求，使得事务可以并发工作，但是会锁会带来三个问题，分别是：脏读、不可重复读、丢失更新； 脏读 脏读是指在一个事务处理过程里读取了另一个未提交的事务中的数据。 当一个事务正在多次修改某个数据，而在这个事务中这多次的修改都还未提交，这时一个并发的事务来访问该数据，就会造成两个事务得到的数据不一致。例如：用户A向用户B转账100元，对应SQL命令如下 update account set money=money + 100 where name= B ; (此时A通知B) update account set money=money - 100 where name= A ; 当只执行第一条SQL时，A通知B查看账户，B发现确实钱已到账（此时即发生了脏读），而之后无论第二条SQL是否执行，只要该事务不提交，则所有操作都将回滚，那么当B以后再次查看账户时就会发现钱其实并没有转。 不可重复读 不可重复读是指在对于数据库中的某个数据，一个事务范围内多次查询却返回了不同的数据值，这是由于在查询间隔，被另一个事务修改并提交了。 例如事务T1在读取某一数据，而事务T2立马修改了这个数据并且提交事务给数据库，事务T1再次读取该数据就得到了不同的结果，发送了不可重复读。 不可重复读和脏读的区别是，脏读是读到未提交的数据，而不可重复读则是读取了前一事务提交的数据。 在某些情况下，不可重复读并不是问题，比如我们多次查询某个数据当然以最后查询得到的结果为主。但在另一些情况下就有可能发生问题，例如对于同一个数据A和B依次查询就可能不同，A和B就可能打起来了 丢失更新 是另一个锁导致的问题，简单来说其就是一个事务的更新操作会被另一个事务的更新操作所覆盖，从而导致数据的不一致 使用过程中，还会发生其他一些问题 如 阻塞、死锁 事务 InnoDB 存储引擎中的事务完全符合ACID的特性 1234567原子性（Atomicity）：原子性是指事务包含的所有操作要么全部成功，要么全部失败回滚，如果成功就必须要完全应用到数据库，如果操作失败则不能对数据库有任何影响。一致性（Consistency）：指事务必须使数据库从一个一致性状态变换到另一个一致性状态，也就是说一个事务执行之前和执行之后都必须处于一致性状态。隔离性（Isolation）：是当多个用户并发访问数据库时，比如操作同一张表时，数据库为每一个用户开启的事务，不能被其他事务的操作所干扰，多个并发事务之间要相互隔离。持久性（Durability）：是指一个事务一旦被提交了，那么对数据库中的数据的改变就是永久性的，即便是在数据库系统遇到故障的情况下也不会丢失提交事务的操作。 MySQL 数据库为我们提供的四种隔离级别： ① Serializable (串行化)：可避免脏读、不可重复读、幻读的发生。 ② Repeatable read (可重复读)：可避免脏读、不可重复读的发生。 ③ Read committed (读已提交)：可避免脏读的发生。 ④ Read uncommitted (读未提交)：最低级别，任何情况都无法保证。 以上四种隔离级别最高的是Serializable级别，最低的是Read uncommitted级别，当然级别越高，执行效率就越低。像Serializable这样的级别，就是以锁表的方式(类似于Java多线程中的锁)使得其他的线程只能在锁外等待，所以平时选用何种隔离级别应该根据实际情况。在MySQL数据库中默认的隔离级别为Repeatable read (可重复读)。 在MySQL数据库中查看当前事务的隔离级别： 1select @@tx_isolation; 性能调优 性能调优不是一项简单的工作，但也不是复杂的难事。InnoDB 性能问题可以从如下方面着手 选择合适的CPU 内存的重要性 硬盘对数据库性能的影响 合理地设置RAID 操作系统的选择也很重要 不同文件系统对数据库的影响 选择合适的基准测试工具 问题联合索引 KEY t_u_s (ctime,uid,source) 与 KEY idx_uid_ctime_source (uid,ctime,source) 之前的区别大吗？（该表用来记录用户访问日志，uid是10位整型，ctime TIMESTAMP） 答案是，用户量不大访问量不高，是不会有太大的问题，但是当 QPS 上来了 就 gg 了。这是为什么呢？看索引区别 前者先是 ctime 字段（ TIMESTAMP ）数据会按照时间先后顺序排列成 B+ 树 （只可以精确到秒）但是每秒有上千的数据呢？它的排列还起作用吗？不起作用，没有大小之分了。 后者先是 uid 字段 （10位整型） 唯一 成千上万的数据也可以先按照 uid 排列、再按照时间，假设一秒钟一个 uid 发了1000个请求 这时候会不会出现像前者的情况呢？ 这块在我优化之后，采用队列处理 确实处理能力上来了，优化时没有太注意这个问题，是等到我们搞活动时候，QPS 1.5W 就明显暴露出来了 🙄 其实这里是当每秒新增数据 120 （或者更低 需要看自己的业务流程）就会感觉乏力，处理能力几乎到 每几秒一个。采用后者则不会 MySql 性能监控工具 工欲善其事、必先利其器。 phpMyAdmin Navicat for MySql Seuquel Pro Percona 数据库和 Percona XtraDB 存储引擎Percona XtraDB 集群提供了高性能的集群环境，能轻松配置和管理多台数据库服务器，是的数据库之间能使用二进制日志来互相通信。集群环境能将负载分赛道不同的数据库服务器中，并提供灾备，以防止服务器死机。 官方文档： https://www.percona.com Redis官方文档： https://redis.io/ 中文文档： http://www.redis.cn/ 据说微博全球最大 redis 集群，所以这里面的文章，我将会入门开始。 Memcached官方文档： http://memcached.org/ Memcached 是一个高性能的分布式内存对象缓存系统，可以用于动态 Web 应用以减轻数据库负载。它通过在内存中缓存数据和对象来减少读取数据库的次数，从而提高动态、数据库驱动网站的速度。 Memcached 主要的使用场景有以下两个： 需要共享某些 Key-Value 形式的小数据时。（因为微博 Web 服务是分布式环境，所以使用全局变量方式等方式是不行的）。 缓存 MySQL 等后端存储的数据。快速进行数据响应，减轻后端存储的压力，同时，还可以为这些缓存数据指定过期时间。 Memcached 的实现决定了缓存的数据不是永久有效的，因此应用程序必须有针对 Memcached 失效时的向后端存取数据的重试方案。Memcached 不适合存放大文件，目前仅允许存放小于 1MB 的数据。 参考资料 MySql 技术内幕 · InnoDB 存储引擎]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>性能</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP 应用性能提升]]></title>
    <url>%2Fa%2F17062406%2F</url>
    <content type="text"><![CDATA[如何保证服务高可用、高性能 是今天PHP全球开发者大全的主题，目前在业界已经有成熟的解决方案。在服务日常稳定，无太大波动时，很难考验服务的高可用，只有经历过爆发式的流量，暴露出问题才发现自己的“高可用”其实并不是那么回事。用户才是检验服务高可用的唯一依据。 在这里我将会从以下几个方面分析： Nginx 与 Apache HTTP 服务器性能优化 内容分发网络 （CDN） JavaScript/CSS 优化 全页缓存技术 Varnish 负载均衡 Nginx 与 Apache ApacheApache 处理请求的模式有三种：prefork 模式（线程创建进程）、worker模式（进程创建线程）、事件驱动模式（与worker模式相似，但会为连接创建专用线程，活动请求使用另外创建的线程）。Apache 在处理每一个请求都会由一个线程或者一个进程处理，，所以 Apache 在处理请求时，开销很大。当它在高并发场景下时，其性能底下的问题便会突显出来。 NginxNginx 提供异步、事件驱动、非阻塞请求处理，由于请求异步处理，Nginx 不必等待每个请求完成，避免锁住资源。Nginx 没有内置任何解释型语言，这也许是好事，因为如此一来Nginx便可以专注处理请求的接受与相应，而具体解析脚本语言的进程则在 Nginx 之外，通常我们认为 Nginx 要快于 Apache ，但是在一些场景下，例如静态资源下，Apache 也有自己的优势。 因此，在构建高性能服务器时，APache 并不是问题所在，PHP 才是真正的瓶颈。 HTTP 服务器性能优化 HTTP Server 优化缓存静态文件通常将静态资源（img、css、js、font）变更不频繁 添加特殊的响应头 Apahce 在 .htaccess 文件中添加123&lt;FilesMatch &quot;\.(ico|jpg|jpeg|png|gif|css|js|woff)$&quot;&gt; Header set Cache-Control &quot;max-age=604800&quot;&lt;/FilesMatch&gt; Nginx 在主机的host配置 conf1234location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|css|js|woff)$&#123; expires 7d;&#125; 这里 大家可能会有疑问？要是我这7天内修改了静态文件怎么办呢？ 好了，这个问题就需要引入版本号，在静态文件之后 也增加一个参数 作为区分 HTTP 持久链接 HTTP keep-alive 模式的优点 CPU 和内存的负载会减轻，因为同一时刻打开的 TCP 链接数变少了，后续请求和响应无需打开新链接，可以继续基于这个 TCP 链接发送上下行数据。 当 TCP 链接建立后，请求的等待时间将会减少，TCP 建立链接时的三次握手发生在用户与Server之间，当🤝成功，一条TCP链接就被建立起来了，同一个域的请求可以并行下载资源(chrome 最大为6)、 网络阻塞情况减轻，因为同一时刻是会有少数的链接保持着。 Apache 开启 Keep-alive 方式有两种，分别是通过修改 .htaccess 文件或 Apache 配置文件 Nginx 的 Keep-alive 是由 http_core 模块支持的，默认情况下是开启的。 除了，缓存静态资源、开启长链接。我们还可以开启 GZIP 压缩功能 PHP独立部署服务Apache 是以 mod_php 模块的方式加载 PHP 的。这样，PHP 与 Apache 耦合很紧，所有的请求都会由 Apache 模块处理，非常消耗机器的硬件资源，我们可以让 PHP-FPM 与 Apache 结合，独立部署，通过 FastCGI 协议及相互传递数据。这样子 Apache 只需要关注 HTTP 请求链接即可，PHP 进程则有 PHP-FPM创建和维护。 Nginx 则有些不同，Nginx 不提供内建 PHP 模块的方法，所以 Nginx 与 PHP 本身就是相互独立的。 最后就是关闭没有服务、没用的模块。 内容分发网络 （CDN） CDN网络特征如下 内容是静态的，不频繁更爱，因为 CDN 会将它们缓存在内存中。 CDN 服务器位于不同的位置。当浏览器请求到达 CDN 时，CDN从请求位置可用的最近位置发送请求内容。 每个浏览器都具有向域发送同时请求的限制 自己在项目中使用 CDN，是这样子的 “卧槽，快了好多”；使用完后 “5555，还能不能更快点啊” 免费的CDN资源库 JavaScript/CSS/Img 优化 静态资源围绕 合并 压缩 合并 可以减少资源请求数量 压缩 可以减少资源下载的时间 常用的资源压缩在线资源 tinypng图片压缩 minifier 当然，最优的方案就是使用前端构建工具(grunt、webpack) 打包 全页缓存技术 使用这个条件是 网页不经常做变更，一般可以用在企业产品官方等。 大多数的平台通过内置支持货通过插件和幂快实现全页缓存。在这种情况下，插件或模块为每个请求处理页面的动态区域。 Varnish Varnish-Web应用程序加速器 官方文档 Varnish Documentation 负载均衡 HAProxy 官方文档 http://www.haproxy.org/]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>PHP</tag>
        <tag>性能</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[北漂之旅]]></title>
    <url>%2Fa%2F17062316%2F</url>
    <content type="text"><![CDATA[123420 =&gt; 5756,60 =&gt; 6640,7 =&gt; 11760,1 =&gt; + ∞ , 选择和机会机会是偶然的、选择是必然的。二月中旬未名湖还结着冰，但少了些溜冰的大爷，柳絮低头低头沉睡尚未苏醒，空气里一阵又一阵的寒风，腿瑟瑟发抖，柳絮飞舞，彷佛在冲着我们笑，欢迎远方游客。踏在最高学府的土地上，泰然自若的神情平衡自渐形秽的内心。望着身边走过的一批又一批的同龄人，内心充满了敬佩之情。其「思想自由、兼容并包」的办学方针让我等之辈可好好学习观摩，「博学之、审问之、慎思之、明辨之、笃行之」。 在闲逛和准备找实习度过了一个礼拜，我努力投递和用心准备力所能及的面试题。最后我去了 新浪微博（会员服务研发），回顾面试过程是很尴尬。出身非科班的我，对基础知识了解甚少，对笔试是无从下手，当时是自我感觉「笔挂」。简单扫了一眼整个笔试内容，我会的活着我能够写出来的甚少，面试官（带我的老大）看出我有些犹豫，问，“你有学习过这些内容吗？”，「非科班，目前还未了解」，“行，先写吧，能写多少算多少。”过了一会儿，看我写的差不多了「其实是没写啥」，开始自我介绍，经历介绍，项目介绍，等等套路。聊了约30分钟，说「你在这里等下，我安排其他同事面」，听到这句我心里松了一口气，暗自窃喜。等了一会儿，该面试官又进来问了一会儿，最后说，“你等下，他还在开会。”「好」，我回复到。等到最后还是他 😖 不是说好又领导面吗？难道他就是大领导，最后我们又聊了一会儿，感觉我还不错，并问：“你有没有什么问题想问我的？”「我要求尽快入职，学习新的东西」。面试官送走我后，当天下午就收到入职 offer 。尽管谈的薪酬和 offer 给的薪酬不一致，在和面试官确定后了解情况，他问了句 “还来吗？” 「来」。 有的时候，选择很重要，当时是置之死地而后生，不想放弃，只想多去尝试和多折腾。放弃这次实习机会也许对我不会有太大影响，在学校可以过的更佳舒坦一些。实习无疑是降低自己的生活质量，找事做😤 是的，我想找点事情干。 我相信我的选择，也珍惜这次实习机会。 我已经开始了自我独立生存，凡事均需要亲力亲为，包括不限于租房、家务、水电费、电器坏了需要维修 充实和疲惫在会员日子里，一直有一位很厉害的前辈带我帮助我成长。从环境到开发、从测试到上线、从基础到架构、从需求到技术方案……教了我很多，在代码层面：如何保证代码简洁、没有冗余、如何提高性能、异常问题处理、如何减小代码耦合性、提高内聚性、各个量级的应对方案，让我思路可以更加清晰去实现一个需求；在分布式系统上：如何保证数据的一致性和准确性、服务高可用、如何防止并发、如何保证系统的安全性、如何提高容错率，让我在分布式消息服务、存储方向有一定了解； 在数据结构上：如何快速查取、如何设计一张合理表、如何选择数据的存储方式、各种数据存储的好处和弊端，让我在数据结构设计上更加容易；在产品方面：如何和产品沟通、如何从技术的角度去思考产品，让我有非代码的角度去考虑问题；在职场上：发邮件需要注意的细节、如何去沟通……逐渐的，自己也可以开始独立承担一些需求。在会员的日子里，谢谢各位前辈毫无保留教我本事，最近因我导致的错误频频，反应了我的基础不扎实，工作不认真，最后前辈们不得不放下自己手中工作处理帮我处理好问题，自己的事情晚上加班做，十分抱歉。希望下次不再犯同样错误！！ 我不想成为温水中的青蛙，一切都是理所当然。 白天工作，下班回到出租屋里，自己学好很晚，很多时候都是躺下就能够睡着。因为除了实习工作，我还做了 蚁互的产品设计和前端开发工作东北林业大学小程序产品设计、前后端开发（可微信搜索「东北林业大学」小程序，产品官方待开发）东北林业大学–新生专题产品设计、前后端开发 在这里分享几个问题，若你有认真看，那么可以一起来思考 支付系统中的订单编号应该如何设计 ？ 如何做到整个支付流程是幂等的 ？中途有调单怎么处理 ？ 如何防止订单提交的高并发情况 ？ 如何保证一个用户只可以参加一次支付返红包活动 ？ 数据库的表结构如何设计才最优 ？ 如何实现一个 cron 脚本变动重启机制 ？ 索引 KEY(&#39;ctime&#39;,&#39;uid,&#39;source&#39;) 会有存问题吗 ？ 如何保证支付交易系统的安全性 ？ 增加 referer 验证，如何测试 ？ 消息队列是一写多读，如何保证一条数据只会处理一次 ？ redis 的哪些操作是原子性的 ？ 项目前评估资源的重要性 ？ 如何处理提高发私信能力 ？ 之外，还有一个特别深的感受，写 3 小时代码，测试需要 2 天，原因除了测试有内网测试、仿真测试、主干测试、线上测试，更重要是不清楚自己负责内容，遇到问题就需要去查原因，最后得出结果是产品策略导致 😫，熟悉业务知道每一行的代码是干什么的，写好注释和文档文档真的很重要。 实习和学习实习外，另一件更重要的事情，那就是本学期所有的课程。面试时候，面试官问了一句，“你可以实习多久？”「如果可以，我会平衡好实习和学习」。相对我校计算机专业（3+1），我们是4年学制，换句话我们整个4年都有必修课程。如何平衡好自己的学习，真的废了不少劲，主动和老师沟通，说明自己的想法，望得到老师的支持，敢于尝试，不放弃任何一个可能。清楚记得，在和我们专业的一名老教授沟通的坎坷，「学生就是应该在学校实习、不来上课就等着重修吧，或者去教务处申请免修或自修」，多次被拒内心万个草泥马，埋冤专业的课程安排和学校的教学制度。今天所谓的本科教育基于种种原因，或明显地，或隐晦地，或有意地，或无意地使大多数毕业生在毕业的时候依然不具备基本的自学能力不说，甚至可能连本专业都没学好。最要命的是，本科教育不仅没能让相当数量的学生学好本专业的同时，甚至令他们对自己的专业产生了憎恨。 大三下一共需要修读18学分，14次考试，准备考试都在返校的车站、火车上，略显狼狈。是的，我没有逃掉所有的课程，比如学校的生产实习、工程实训等项目。还未到期末还不知道会有哪些科可能会挂🙄 自己做的选择，后果总是有利有弊，自己要背，怨不得别人。 生活和生存我们都想生活的好点，但在这之前，我们都不比需要学会生存。有人说出去实习可以自己挣钱自己过好点生活，每天只需要上几个小时班，下班后做点自己喜欢的事情，没有人辅导员、没有老师，真的很爽。是的，我生活的更好，无病无灾，早上喜欢可以自己睡一个懒觉，下午吃完晚饭后还可以去健身房锻炼身体，晚上走路回家。真的，在北漂的几个月里，我没有太感受到早高峰晚高峰、没有感受快节奏的生活方式方法，因为这些都是大家认为，或者听说的。个人的生活快不快，过的幸不幸福是别人无法抉择，关键是在自己。 慌慌张张 匆匆忙忙 为何生活总是这样 难道说 我的理想 就是这样渡过一生的时光 不卑不亢 不慌不忙 也许生活应该这样 ——————《活着》·郝云 在文章的开头写了一个关联数组，也许大家并没有注意或者不知道是什么含义。是的，也许只有我能够看懂吧 20 =&gt; 5756 往返学校和公司 key 次，仅仅火车票是 value 元 60 =&gt; 6640 整个实习期的工作日是 key 天，一共挣得 value 元 7 =&gt; 11760 需要缴纳 key 月房租，一共是 value 元（不含水电燃气费用） 1 =&gt; + ∞ 实习经历 key 次，但经历是 value ，是宝贵的。 不用算，实习带给我巨大的经济负担，「亏着做生意，也许只能够年轻这几年吧」 有钱没钱，生活依旧 唠叨新浪微博的食堂真的不咋样、一次新鲜多次腻； 相比其他公司，没有零食没有下午茶； 实习生没有车补、没有饭补、更没有房补； 问题总是复杂的，解决方法总是简单的；]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>我在微博</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微博会员实习总结（一期）]]></title>
    <url>%2Fa%2F17050501%2F</url>
    <content type="text"><![CDATA[心有所向，勇气尚存敢于尝试，选择和机会 时间要回到今年2月中旬，带着尝试的想法和勇气在不顾家人亲戚的反对孤身一人来到北京，因为我想做的事情有许多，趁年轻，多折腾！往往想做的事情和能做的事情差距很大，能做的事情和准备去做的事情也有很大差距，准备去做的事情和做完的事情也有很大差距，做完的事情和做好的事情依然存在很大差距。经过一周的海投，可谓是一波三折惨不忍睹，要么是杳无音信，要么是经验不匹配，要么是岗位已招满……没有基础的我，笔试一个「笔挂」一个。近两周的奔波拿到一个小公司前端和大公司的后端。谢谢他们愿意收留我给我一个实习的机会，最后我选择了后端-新浪微博。因为可以弥补自己非科班出身基础知识薄弱和不足，能够让我见到前端看不见的内容，如思考问题方式、数据处理技巧、性能优化、机制和策略等等。 新浪微博的工作环境很nice，大楼有强烈的视觉冲击，装修有格调，基础设施完善；团队的技术氛围很浓厚，前辈们技术面广，各自都擅长领域，在项目中起核心作用，技术带动业务的发展。目前我是望尘莫及～ 在会员日子里，一直有一位很厉害的前辈带我帮助我成长。从环境到开发、从测试到上线、从基础到架构、从需求到技术方案……教了我很多，在代码层面：如何保证代码简洁、没有冗余、如何提高性能、异常问题处理、如何减小代码耦合性、提高内聚性、如何保证数据的一致性和准确性、各个量级的应对方案；在数据结构上：如何快速查取、如何设计一张合理表、如何选择数据的存储方式、各种数据存储的好处和弊端；在产品方面：如何和产品沟通、如何从技术的角度去思考产品；在职场上：发邮件需要注意的细节、如何去沟通……在会员的日子里，谢谢各位前辈毫无保留教我本事，最近因我导致的错误频频，反应了我的基础不扎实，工作不认真，最后前辈们不得不放下自己手中工作处理帮我处理好问题，自己的事情晚上加班做，十分抱歉。希望下次不再犯同样错误！！ 谢谢会员里的每一位前辈！谢谢北京的室友！谢谢学校各位老师的支持和理解！谢谢学校寝室的各位室友！ 技术这条不归路，还有很长很长的路要走。会很艰辛有困难，但我们需要突破自己，驱动自己成长。 愿我们大家都「心有所向，勇气尚存」 2017-05-05]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>我在微博</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[奋发图强，心中有梦]]></title>
    <url>%2Fa%2F16092522%2F</url>
    <content type="text"><![CDATA[奋发图强，心中有梦 future belongs to the few of us still willing to get our hands dirty. –Luo Yonghao 这是锤子科技CEO罗永浩说过的一句话，颇有共鸣。意思大概是：未来属于我们当中那些仍然愿意弄脏双手的少数人。 静心下来，回想起自己在大学过去一年过时间里，应该是“迷茫”、“无知”、“自立”、“敢说敢做”、“脑洞大”、“乐意思考”、“有梦想”、“爱生活”、“有爱心”。自己一直把自己当作一个个性派，想有别样的人生。彪悍的人生不需要解释。 此时此刻我总想和大家分享点什么，心中如热血澎湃思绪万千，可却心静如水无一言可发。因为现在的我与踏进哈尔滨的那一刻的心情不一样，也许是心中的梦想不一样吧。下火车那刻浑身发抖，心中叹道，九月份的北国风国可不能够由着一个穿着短衣短裤的小屁孩任性满大街扭屁股了，那会儿心中哪有啥多想的，赶紧停下来穿件衣服。从小就独立的我，对新环境没有太多的“在意”，唯一不习惯的是朝阳特别早就照耀在我的脸上，让我无法安心睡只得早早爬起，任性坐在那里发呆不知所思。几周下来总感觉烦，渐渐的和一推来自住过四面八方室友连结一片，一块上课，一块去图书馆，一块吃饭，一块参加同一个学生组织和社团……这也许是每个大学生脑中最美好最幸福的大学片段之一吧。 在过去一年多时间里，我一心一意，全力以赴，总想把成绩搞上去，有奋发图强坚持不懈奋战到底的，有专心致志深入挖掘的，当然也有临阵磨枪一意孤行的……但最终下来都是表现平平，成绩不上反下。尽管这样，但我从未放弃我当初的初心。一直对自己说，认真不是态度即可，是行动方可才行。大二上班学期，成绩渐渐有了些起色，新学期里，我还要继续努力，不要愧对自己青春美好时光。 在过去一年多时间里，我不挑三拣四，投机取巧。班里担任组织委员，一切都是那么老老实实，勤勤恳恳。尽管没有忙上大家大忙，也没有什么大事可做。参加过两个学生组织。学校校报是一个，作为校报办公室部员，职责谨记于心，每周按时统计各部门人数以便顺利开完会议。协助部长等完成文艺晚会策划活动和校报日常安排，多次获得校报优秀部员。东林新媒体中心—这是我结交朋友，学习技能最多的组织。也是我看着它出生-发育-成长-强大。一路不畏风雨艰险，困苦挫折难题。一切都是从无到有，从摸索到实践，从协商到行动，从想法到成果…各种蹭蹭往上涨的指标和数字，留给他们的是辛苦背后的喜悦欢呼和受人瞩目。我十分感谢这样优秀的组织曾对我的成长，谢谢你们。好久不见。 曾还对自己说，生活的价值在于你怎样使用它，而不止是复制。只有策马平川的人才知道马背上的快感。 军训期间，我开始出去面试找工作，总感觉自己是大一，才大一，还有学习的机会，和其他那些来找工作的应该有些差距，但是可笑的是，没有人会问我的出身，只问我有什么能力，在我申请的这个职位我的专业技能怎么样，做过什么好的项目对这个行业有什么好的想法和自己来做有什么好的战略能够给公司带来多大的利润空间。真的，也许在他们看来我还是太幼稚太可笑。我不知道是我表达的意思不对还是面试官对我的价值观不认可。后来去过达内科技去过同城去过赶集去过海来去过如花…时间实践证明还不够合格不够优秀不是实力派，还不能受人招揽，这一路唯一在变的，只有时间，其他的也只是染上了一层层灰尘，反将其覆盖无法脱离，更无法拯救。最后累的是自己，空白的也是自己，对不起的还是自己。 在第一学年里，为爱好倾入了许多，甚至是有的时候忘却了自己主业，我也一直在找机械与新媒体是否存在这直接的关系，我要如何将这两者毫无关联的行业联系一起，只可惜涉世太浅并且对两者都还是个门外汉，什么都不懂会的太少毫无专业性的技能，总之说起来就特别像一个“乞丐”。也曾在这学期里从事校园020，只可惜小材大用知小谋大大愚若智，正式因为缺少了对问题的分析思考和问题处理的方法这些基本职业素养技能。这件事情让我对创业产生了敬畏。也许还有一件遇到后，才大彻大悟，一个连新闻都不愿相信都感觉那是在炒作的人，尽然花了若千元来购买自己仅存对一丝网络的信任，事情后，心是如此的平静，没有抱怨没有气氛没了力气。 我最恨的是我自己，每次明明我知道错了，还是无动于衷不愿用行动…人生本来就是糊涂的，别人拥有的，你不必羡慕，只要努力，你也会拥有；自己拥有的，你不必炫耀，因为别人也在奋斗，也会拥有。多一点快乐，少一点烦恼，不论富或穷，地位高或低，知识浅或深。每天开心笑，累了就睡觉，醒了就微笑。 有过既往不咎，有意牢记心中。心中有梦，不忘初心。坚持自己现有的一份折腾的心。 我不会说多么华丽的话，我真的很感谢国家这个政策，也非常感谢老师同学们对我进入大学以来的照顾和关心。 真的是由衷的感谢，从心底里。 现在，我觉得我的生活过的很充实，起码我在努力，努力让自己变得优秀，不让家人对我失望。不要让家人觉得他所有的辛苦都是白费的。 如果你没有一个好的背景，既不是白富美，又不是高富帅，没有三叔公五叔伯七大姑八大姨可以拿来炫耀，闺蜜不是顾里，老公不是马云，爸爸不是李刚。那么，你还有什么资本拿来跟人家拼，谁的青春不需要奋斗？]]></content>
      <categories>
        <category>大学</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[两年]]></title>
    <url>%2Fa%2F16073119%2F</url>
    <content type="text"><![CDATA[毕业两年我究竟成为了一个什么样的人？ 回想起当初毕业时给予自己许诺，如今已腐烂不堪；也远远不及当初那个充满信心坚持不懈的我，当初所做所成所辉仅代表当时。 唯一没有变的身份是学生，当初是一名学生，现在也是一名学生；当初真是一名学生。现在真不像是一名学生。比如说，最近半个月里我只有今天去上了一节课并完成相关的实验报告单。若不赶时间我相信我自己今天也不可能回去。因为自己一直清楚去了课堂也会拿起手机打开相关的APP刷个不停，浪费时间，简言之，我现在好像是不学无术。两年时间里，我究竟做了哪些事？你要是直接来问我，我可能会直接回到你“卧槽，我也不知道，我哪知道时间去哪儿了”唯有慢慢回味自己成长岁月。 无需经验任性疯狂的青春岁月两年前今天，也就是距离高考完一个礼拜，我变得很自然，也很坦然。高考完没有主动去估计自己分数，也不想去知道自己在战场中实力。过去了也只能够留下，我并不能去改变什么，唯有放宽心眼向前看。因为我在高考前就已经做好的最坏的打算。对一切都会用来者不拒的心态面对。心中的那种信念也许到了否极泰来，安之若素。 高考随后也进行了该有的疯狂和执拗。5天后直奔广东，在广东闲荡和流浪很久，那天电话被告知自己的成绩，听到那个成绩没有说得出的喜悦，也没有哭得出的悲伤。因为它比我曾理想的要差，比我曾的最坏打算要好。在没有专家专人和专业的书籍的情况下，寥寥草草的完成志愿填报。一个月后奔去海南，希望去看那我曾经想有的天涯海角和海枯石难。 柳暗花明又一村却不知前方全是坑“这些都是小事儿，我给你讲”–大一那时最常用口头禅。看似自己充满自信，给人一种上知天文，下知地理；无所不知，无所不会的天才少年，硬是装足了逼。一向都是敢想敢做想说，对新鲜事情也敢于尝试和折腾，强烈的好奇心在过去的两年里帮了我很多。当然也害了我很多。在“上了大学就轻松了”的思想灌输下，大学真想去轻松轻松。然折腾并没有这根神经和轻松黏住。深奥难懂的基础学科知识和专业知识技能，我从小好大都钟情于后者，以技多不压身，技高于一切。新鲜感和好奇心更加让我对诸多事情充满好奇，比如，视频拍摄后期制作、PS搞怪、特效、三维软件任意转化、视觉设计、平面设计、工业设计、PPT动画、新媒体运营、还有一切美的东西。（美和艺术、艺术和技能、美和技能）因为这些东西最能够打动我，这些引力远远大于教授们手绘演示课件的内力。接下来的日子对二者的倾斜差距越来越大，心越大越容易乱了阵脚也越容易失去自己想得到。与其说自己涉猎甚多，我更愿意听柳暗花明又一村却不知前方全是坑。 学习真本领才是硬道理看到别人拔剑四顾确实有些艳羡，回头是岸，为时不晚。不要艳羡别人赚钱，也别觉得人家赚钱轻松–大辉说。我相信人学无止境。我信仰对于技术偏执不止，对于产品忠诚到底。初“入”茅庐，未成气候。常说做自己喜欢的才是最重要的，但我们千万别忘记，给自己创造价值提高自身价值才是在茅庐修炼目的。待初出茅庐后，稍加修炼必成大器，那时进入拔剑四顾阶段，便可分享自己应有的价值，随之即来的银元也许可以让自己看到的更远更长久。 坚持做自己喜欢的高于三个月那么坚持做自己喜欢的是一件痛苦的事。好奇心不会长存三月之久，三月后激情早已经消失殆尽。若还是不卑不亢走下去，剩下唯有命运多舛，自力更生，奋发图强，进取向前，来自自我的繁荣富强。而我现在已经度过新一门的蜜月期，正在迈进成长期。 拔剑四顾时未成 交大校长张杰说“上大学的过程是从不知道到知道再到不知道的过程。一开始是不知道自己不知道、逐渐才知道自己不知道；后来又不知道自己知道、再后来才能知道自己知道；到最后是以为自己都知道，才知道自己还有更多不知道” 不知道-知道-不知道，也许我现在知道些什么，也许我现在懂点什么，也许我现在会点什么，也许我现在缺点什么，或许时间可以直接告诉我哦。因为我从很久开始就在等待那个时间点，也许快了，也许要些时候。 两年后我又将毕业，我又会成为一什么样子的人？让我们共同期待。 2016.06.15 Astonep]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[大二结束语-我应该写点什么]]></title>
    <url>%2Fa%2F16073118%2F</url>
    <content type="text"><![CDATA[不擅长写计划我，现在也不知道从哪几个方面来总结我的大学两年生活。我是应该用美好、充实、认真等关键词来形容还是用无聊、懒惰、无所事事。总之，没有写过检讨的我也不知道我现在是有错还是没错。心中一直清楚，自己不满足，内心一直都是换着一种满满的负罪感，自我评价起来心里惭愧不已，还不是不值得一提。尽管这样，我还是希望写出来，因为只有当自己的想法写出来后也许才是自己真正相通了吧。 这一年实现了一些东西，也变得现实了一些。 我说，这一年我在学习，你敢信？从大二推出所有的组织机构社团，当碰到熟人朋友问起我最近在干什么，我总是用“在学习”的口吻回复他，不是和他不熟，也不是随口敷衍，因为我没有什么事情可做，不知道该怎么回答，但是我还记得我的身份–学生，学生以学习为天职，就像卫兵守护国家安全一样重要。也许在回答的那瞬间学习变成了我口中唯一光明正大无法替代的“名次”（已经不是动词了）。上半学期，浑浑噩噩便过去了，时间是公平的，但好像我并不是这里面的知情者，上课是一个僵尸没有思想没有热血，身在教室，心在外，去也是浪费时间，何必这么糟践自己的青春。大二下就很直接很大胆，逃课，逃课，逃课还是逃课主旋律，两周不去教室上一节课在今年上半年表现尤为突出，最长是一个月都没有去过教室。对老师的点名之道无所畏惧，对老师布置任务不予理睬，撇之不管。 出来混迟早要还的，来自东北皇家林业高中，“月考”很恐怖，可谓是杀伤力三千，每一次考试对我讲都是一种折磨和毁灭时摧残。 我说，这一年，我说，这一年我乱花钱是真自从上大学以来，远离家乡父母多月不在身边，大胆放肆，肆意妄为在加上随心所欲，用起钱来是大手大脚挥金如土，毫无保留，毫不体会父母感受。自从有了信用卡每月基本消费大幅度增加，但还没有到透支状态。没有固定的经济来源，过着下月补上月的生活。在父母面前都是感觉到很惭愧，内心满怀内疚，胆敢无理由免费伸手索取，唯有自己动手赚取的才行。 这一年我在逃避逃避过去无所作为自我不认可，逃避不愿意认清现实服输的自己，逃避自我虚伪不愿真目识人，内心深处的虚荣心作祟。到最后还是逃避不愿面对现实结果是更加的被摧残的体无完肤，头破血流。 这一年我忽略社交屏蔽所有APP的推送消息，包括微信等、关闭朋友圈、取关了没用意义不大的公众账号、提出了没用的各种群。突然手机变得安静了许多，自己变得沉静下来，之前我是一个重度使用者，现在来看好了很多。尽管在智能化的今天，只想好好利用手机。刚开始发现自己微信过了很长时间才回复，有事情过很久才知道。在互联网发达时代里，人的心稍有不定便变得浮躁不安，地动山摇的感觉。很容易产生以为自己和很了不起，也很容易沉迷于网络就再也无法脱离苦海。想得到真才实学首先收心把自己变得理性，理性会帮助你获得你想要的高度，而随意只能够人云亦云罢了。我忽略社交，但我并没有离开过网络，也正因为网络才让我成长了许多。 这一年我忽略运动最明显的变化:身体变得消瘦，面部泛黄，印堂发黑，神情恍惚无光，明显能够感觉到浑身用不上力，双腿麻木，类似于被甲醛浸泡过的干柴。回想起昔日八块腹肌，强劲二头肌大哥般的眼神混迹于街头小巷，出来清清嗓子近便可震耳欲聋，远可传几条街。现在稍微的剧烈运动便是粗气踹踹，血液循环不畅，不再是一口气来一百个俯卧撑30个引体向上，那样子的日子在过去的一年里早已经远去，再怎么奔跑也赶不上，只有越来越累，相距也越来越远。 这一年，我输给了计划这一年，我输给了变化这一年，我输给了坚持这一年，我输给了内心自怨这一年，我真狼狈…… 这一年，我收获了许多这一年实现了一些东西，也变得现实了一些。我变得成熟和理性，一个有思考、有思想、有理想、做事有计划，变得沉着冷静。这一年、初入一行、略知一二、成就小有。感谢一路帮助过关心过支持过我的人，忠诚地谢谢你们。2016.07.31]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>一年</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Next 使用技巧]]></title>
    <url>%2Fa%2F16062510%2F</url>
    <content type="text"><![CDATA[「标签」(Tag Plugin) 是 Hexo 提供的一种快速生成特定内容的方式。 例如，在标准 Markdown 语法中，我们无法指定图片的大小。这种情景，我们即可使用标签来解决。 Hexo 内置来许多标签来帮助写作者可以更快的书写， 完整的标签列表 可以参考 Hexo 官网。 另外，Hexo 也开放来接口给主题，使主题有可能提供给写作者更简便的写作方法。 以下标签便是 NexT 主题当前提供的标签。 文本居中的引用 此标签将生成一个带上下分割线的引用，同时引用内文本将自动居中。 文本居中时，多行文本若长度不等，视觉上会显得不对称，因此建议在引用单行文本的场景下使用。 例如作为文章开篇引用 或者 结束语之前的总结引用。 使用方式 HTML方式：使用这种方式时，给 img 添加属性 class=”blockquote-center” 即可。 标签方式：使用 centerquote 或者 简写 cq。 123456789&lt;!-- HTML方式: 直接在 Markdown 文件中编写 HTML 来调用 --&gt;&lt;!-- 其中 class=&quot;blockquote-center&quot; 是必须的 --&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;blah blah blah&lt;/blockquote&gt;&lt;!-- 标签 方式，要求版本在0.4.5或以上 --&gt;&#123;% centerquote %&#125;blah blah blah&#123;% endcenterquote %&#125;&lt;!-- 标签别名 --&gt;&#123;% cq %&#125; blah blah blah &#123;% endcq %&#125; 效果示例随时随地发现新鲜事!微博带你欣赏世界上每一个精彩瞬间,了解每一个幕后故事。分享你想表达的,让全世界都能听到你的心声! 突破容器宽度限制的图片 当使用此标签引用图片时，图片将自动扩大 26%，并突破文章容器的宽度。 此标签使用于需要突出显示的图片, 图片的扩大与容器的偏差从视觉上提升图片的吸引力。 此标签有两种调用方式（详细参看底下示例）： 使用方式 HTML方式：使用这种方式时，为 img 添加属性 class=”full-image”即可。 标签方式：使用 fullimage 或者 简写 fi， 并传递图片地址、 alt 和 title 属性即可。 属性之间以逗号分隔。 123456789&lt;!-- HTML方式: 直接在 Markdown 文件中编写 HTML 来调用 --&gt;&lt;!-- 其中 class=&quot;full-image&quot; 是必须的 --&gt;&lt;img src=&quot;/image-url&quot; class=&quot;full-image&quot; /&gt;&lt;!-- 标签 方式，要求版本在0.4.5或以上 --&gt;&#123;% fullimage /image-url, alt, title %&#125;&lt;!-- 别名 --&gt;&#123;% fi /image-url, alt, title %&#125; 默认 效果示例 Bootstrap Callout使用方式1&#123;% note class_name %&#125; Content (md partial supported) &#123;% endnote %&#125; 其中，class_name 可以是以下列表中的一个值： default primary success info warning danger 效果示例default Content primary Content success Content info Content warning Content danger Content 参考连接 Next 内置标签]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[做自己喜欢的是一件很痛苦的事情]]></title>
    <url>%2Fa%2F16052422%2F</url>
    <content type="text"><![CDATA[不知从何时起，喜欢上做自己喜欢的；不知从何时起，坚持着做自己喜欢的； “if we’re not careful turns into reality”以为也许不经意间梦想成真 ——「 Lost Stars 」 把自己喜欢的做成了一件痛苦的事，此时此刻真是一言难尽喜欢折腾，喜欢尝试，想思考，对自己不知道但又神奇的东西保持着万分好奇感，对亲自目睹更加是梦寐魂求。无所不能更是无所畏惧，那种感觉有点像台风口下会飞的猪。因为：从台风的角度来讲，把猪吹起来是一件很轻松很容易的事情，前提是猪靠近台风的旋涡区；从猪的角度来说，猪飞到天上那瞬间是悲哀的，在狂风暴雨下任由其分解分解，最终变成了“马”革裹尸。猪是痛苦的，是无用的，是不值得一提的。 把自己喜欢的做成了一件痛苦的事，真是来之不易世间一切，唯我所用，非我所有。有时候，选择比坚持更加重要；胜任比坚持更为重要；坚持比坚持到底更加不易。苟非吾之所有，虽一毫而莫取。要想获得，全凭真材实料。我相信这种感觉投资人最有感触，给一个科研机构投入巨额的科研经费和优秀人材，往往得到的结果都让投资人感到失望，甚至是绝望，乃至害怕。但是，他们的执着是来之不易的也是他人无法比拟的，因为他有踏实肯干愿意付出时间和精力投入钻研，世间一切唯他所用。 把自己喜欢的做成了一件痛苦的事，真是应该值得深刻反思决定事情的好坏并非是态度，更重要是行动，没有行动，一切都是空谈，永远不能够把事情落实。做事能力这一大因也并非是可说即得就有，能力是一个核心基础，需要用行动将想法用能力的某种形式表现出来，这一过程，精心用心便是态度，精细是过程，精品是成绩（成绩便是大家关注的重点）。需要反思的另一个词“效率”。“朝九晚五、工作即工作，生活即生活”的工作我们都愿意选择，但需要解决是非能力范围的东西，加班便成了家常便饭，自然过程是煎熬的苦痛的，甚至几天下来都没有进度，那是便也可感受到投资人付出和得到不成正比的绝望感，最后感动的只有自己。 把自己喜欢的做成了一件痛苦的事，真是应该重新规划规划计划不执行，计划永远赶不上变化，这么做又是何必呢？苦了自己。 我要唱首沧浪之歌 响彻在这大地 用那最猛烈的孤独 找寻你那失落的骄傲 我要唱首沧浪之歌 穿越在这江河 用那最汹涌的卑微 救赎我们幻灭的渴望 2016.05.24 Astonep]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>做自己喜欢的</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何使用10个小时搭建出个人域名而又Geek的独立博客？]]></title>
    <url>%2Fa%2F16010316%2F</url>
    <content type="text"><![CDATA[摘要：我在这里写下长篇大论，只希望小白们能跟快速入门。坚持10个小时 坚持10个小时 坚持10个小时（重要的事情说三遍！！！）搭建出属于自己的个人独立博客，我将会通过 安装流程主线+优质文章 作为参考。由于我本人是一名学生（非计算机专业），喜欢尝试和不愿意人与亦云想要不一样的人生打小喜欢折腾便开始了搭建自己独立博客的道路，这路上可谓是路途凶险和艰难费了我九牛二虎之力解决，还是不够完美，但我希望他完美，希望他可以记录我的时光。作为一名技术小白，没有技术基础。看到网上教程更是玲琅满目直至眼花缭乱无从下手，讲真，我从开始接触到成功搭建花费了不低于100小时，走了很多弯路和误区， 希望通过本教程可以真心小白一个敢于尝试的机会。我会将这篇教程写仔细，会将我出现过的问题给予解决方法。（同时这也是我第二次，就在前几分钟，电脑过热，系统崩了，快写完的教程没有按Ctrl+S的情况不翼而飞了。我现在的内心是崩溃的）但是我知道坚持一会，就可以完成了。 前言天生倔强不愿屈服的我，总受想做出一番成绩来，不愿意随波逐流。我为什么要在这个博客已经不盛行的时代去搭建属于自己的博客？可以看看我之前写的《重新认识自己》和《我为什么那么懒？》。不去折腾怎么能知道自己不行？未知的东西太多，需要我们去学习和掌握的数不尽数，唯有时刻保持这一份对新事物的好奇心并真心有心去坚持下去。 疑问 先给大家预览下我的博客目前最终版视己慎独，很多人用 wordpress，你为什么要用 github pages 来搭建？为什么要搭建一个独立博客?独立博客与微信公众平台有什么区别？ 1、 无需购置服务器，目前的blog挂载在Github Pages，免服务器费的同时还能做负载均衡；github pages有300M免费空间，资料自己管理，保存可靠；学着用 github，享受 github 的便利，上面有很多大牛，眼界会开阔很多；github 是趋势，像eleme这种互联网大公司都在github上完成自己的项目；顺便看看 github 工作原理，最好的团队协作流程；你不觉得一个文科生用 github 很 geek 吗？瞬间跻身技术界。 2、独立的才是自己的。在知乎上有这样一个话题《GitHub 能作为衡量程序员能力的指标吗？》，在我看来独立博客是喜欢尝试新事物的人新一片天空，他们可以在这片天空中翱翔，他可以不太受拘束爱上些自由，他的内心因他的不羁和外表不屈，愿意潜心研究深钻其爱好，同时在这里他可以结实一大批有着共同的爱好的追梦人。对于小白，请保持记得那份好奇心，坚持尝试下去，继续折腾。 3、公众账号是对所有人开放的，简单申请即可使用，无需太多的挑战。他仅仅只是一个平台（对一般人来说）同时好好做运营也似乎不是一件简单的事情，没有足够的经历和精力是很难达到一个高度，也很难去传播你的文化价值观念。博客也只是一个平台，但是这里有你想要的，也是你的用武之地。公众账号是一个一对多的平台很难利于交流尽管现在越来越人性化，这点你的博客很轻松就可以做到。更多的区别在此不多分析。 成功方向 1、安装准备软件 Node.js、Git、GitHub DeskTop（前两个必须安装，后者可选） 2、本地搭建hexo框架、配置主题、修改参数、实现本地测试预览 3、链接GitHub、实现在线预览 4、购买域名并解析 （这里告诉大家一个方法，1元购买一个使用期限为一年.cn的域名 仅高校学生可以 ） 5、日后站点的管理和运营 纸上得来终觉浅，要知此事须举行。世上无难事，就怕是懒人。以下以我的博客:blog.shijinrong.cn（shijinrong.cn是我一下行动）在windows下为例，教大家如何搭建一个独立博客。 安装流程安装准备软件 Node.js Git GitHub Desktop (可选)以上几个软件均是英文版本，请小白不要害怕，敢于面对。安装简单，在此不做详细介绍。 本地搭建hexo框架、配置主题 目录I.Hexo简介II.Hexo安装方法III.Hexo配置方法IV.Hexo主题修改V.Hexo部署方法I.Hexo简介Hexo 是一个轻量的静态博客框架。通过Hexo可以快速生成一个静态博客框架,仅需要几条命令就可以完成,相当方便。 而架设Hexo的环境更简单了 不需要 lnmp/lamp/XAMPP 这些繁琐复杂的环境 仅仅需要一个简单的http服务器即可使用 或者使用互联网上免费的页面托管服务比如本人的这个博客 就是托管于 GitHub Pages服务上 II.Hexo安装方法参考官网中文文档,请尝试者仔细读教程和官方文档。这步很简单，正如官方网站写的那样只需要一条命令即可自动安装hexo框架。 $ npm install -g hexo-cli #使用 npm 安装 Hexo。 初始化hexo请参考hexo官方文档,init命令中的&lt;folder&gt;就是文件夹aierui.github.io。初始化后，aierui.github.io里面就已经有完整的Hexo框架了,这里可以在任意地方新建立一个文件夹并命名为aierui.github.io【不要问为什么】打开该文件，点击鼠标右键你会看到一个Git bash here点击跳出git的黑窗口，输入命令$ npm install，完成后，指定文件夹的目录如下： III.Hexo配置方法熟悉hexo为了让读者快速了解Hexo，我作几个简单介绍吧。当然，更多的还是需要仔细阅读文档才能了解更详细。 _config.yml 全局配置文件。要注意的是，该文件格式要求极为严格，缺少一个空格都会导致运行错误。小提示：不要用Tab缩进，两个空格符， 冒号：后面只用一个空格即可 。 themes 存放主题的文件夹 source 博客资源文件夹 source/_drafts 草稿文件夹 source/_posts 文章文件夹 themes/landscape 默认皮肤文件夹……官方文档中教详细。 配置hexo做一些基础配置即可，请参考配置官方文档，这里也可以省略，因为在后面配置主题NExt是也有提到这里的配置修改。 IV.Hexo主题修改Hexo主题非常多，可以参考丰富多彩的Hexo主题，本文选Next为主题，样式参考我的博客视己慎独。 到这里我们还是采用参考官方文档,5 分钟快速安装。在本地修改完这一连串的配置，（包括：语言设置、财产、菜单设置、侧栏设置、头像设置、作者名称、站点描述、标签云页面、分类页面、统计系统、评论系统等等）现在是需要下面的一个命令即可在本地成功预览你的博客样式。 V.Hexo部署方法写完文章之后 就可以启动本地服务器测试了 $ hexo s #启动本地服务器测试 这个时候在浏览器中输入http://localhost:4000端口 静态的网站架设完成 当你修改好你想要的样式，包括头像，favicon图标，标题样式，第三方平台链接等等等等你心中完美的页面。那就可以继续下一个阶段了。再提示一点，大家可以hexo主题修改一步就hexo s看下变化，初次接触对参数不清楚。只有hexo s后在可以在本地浏览到效果，Ctrl+C 停止服务器。 链接GitHub、实现在线预览目录I.注册GitHubII.配置和使用 GithubIII.SSH Key 配置成功IV.实现在线预览现在已经来到第三部分了，请你在坚持一下。 I.注册GitHub访问：http://www.github.com/ 注册你的username和邮箱，邮箱十分重要，GitHub上很多通知都是通过邮箱的。注册过程比较简单,在此我不再啰嗦。界面任然是英文，请读者耐心一点。 II.配置和使用 Github配置 SSH keys我们如何让本地git项目与远程的github建立联系呢？用SSH keys。 检查 SSH keys的设置，首先我们需要检查你电脑上现有的ssh key： $ cd ~/.ssh 检查本机的ssh密钥 如果提示：No such file or directory 说明你是第一次使用git。 生成新的SSH Key： $ ssh-keygen -t rsa -C &quot;邮件地址@youremail.com&quot; Generating public/private rsa key pair. Enter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa):&lt;回车就好&gt; 注意1: 此处的邮箱地址，你可以输入自己的邮箱地址；注意2: 此处的「-C」的是大写的「C」 然后系统会要你输入密码： Enter passphrase (empty for no passphrase):&lt;输入加密串&gt; Enter same passphrase again:&lt;再次输入加密串&gt; 在回车中会提示你输入一个密码，这个密码会在你提交项目时使用，如果为空的话提交项目时则不用输入。这个设置是防止别人往你的项目里提交内容。 注意：输入密码的时候没有*字样的，你直接输入就可以了。 最后看到这样的界面，就成功设置ssh key了： 添加 SSH Key 到 GitHub在本机设置SSH Key之后，需要添加到GitHub上，以完成SSH链接的设置。 1、打开本地C:\Documents and Settings\Administrator.ssh\id_rsa.pub文件。此文件里面内容为刚才生成人密钥。如果看不到这个文件，你需要设置显示隐藏文件。准确的复制这个文件的内容，才能保证设置的成功。2、登陆github系统。点击右上角的 Account Settings—&gt;SSH Public keys —&gt; add another public keys3、把你本地生成的密钥复制到里面（key文本框中）， 点击 add key 就ok了 测试可以输入下面的命令，看看设置是否成功，git@github.com的部分不要修改： $ ssh -T git@github.com 如果是下面的反馈： The authenticity of host &apos;github.com (207.97.227.239)&apos; can&apos;t be established. RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48. Are you sure you want to continue connecting (yes/no)? 不要紧张，输入yes就好，然后会看到： Hi aierui! You’ve successfully authenticated, but GitHub does not provide shell access. 设置用户信息现在你已经可以通过 SSH 链接到 GitHub 了，还有一些个人信息需要完善的。 Git 会根据用户的名字和邮箱来记录提交。GitHub 也是用这些信息来做权限的处理，输入下面的代码进行个人信息的设置，把名称和邮箱替换成你自己的，名字必须是你的真名，而不是GitHub的昵称。 $ git config --global user.name &quot;aierui&quot;//用户名 $ git config --global user.email &quot;imland@outlook.com&quot;//填写自己的邮箱 III.SSH Key 配置成功本机已成功连接到 github。若有问题，请重新设置。常见错误请参考：GitHub Help - Generating SSH Keys 和 GitHub Help - Error Permission denied (publickey) IV.实现在线预览创建仓库和本地远程到GitHub仓库首先在GitHub上创建一个仓库repository，注意仓库名称必须为aierui.github.io，也是你之前在本地建立的文件夹名称 ，这里由于存在这个名称的仓库，无法重名。 # 将当前的改动暂存在本地仓库 $ git add . # 将暂存的改动提交到本地仓库，并写入本次提交的注释是”first post“ $ git commit -m &quot;first post&quot; # 将远程仓库在本地添加一个引用：origin $ git remote add origin https://github.com/username/projectName.git # 向origin推送gh-pages分支，该命令将会将本地分支gh-pages推送到github的远程仓库，并在远程仓库创建一个同名的分支。该命令后会提示输入用户名和密码。 $ git push origin gh-pages 在GitHub上将gh-pages merge 到msater上 添加部署代码在站点的-config.yml文件新增字段Deployment 站点部署到github要配置这里, 非常重要 deploy: type: git 部署类型若有问题，其他类型自行google之 repository: https://github.com/Aierui/aierui.github.io.git branch: master plugins: -hexo-generator-feed merge后就可以部署上去了，在Git命令黑窗口里输入 $ hexo g #生成静态网页 $ hexo d #开始部署 完成以上步骤，你算是成功了。在浏览器中输入aierui.github.io（自己对应即可）看到了你在本地搭建的博客主页一样，哇哇哇哇哇哇。开心死你了，不要忘了回来给我点赞呀~Enjoy~ 购买域名并解析这一环节相对简单，可以参考一步步在GitHub上创建博客主页(3), 一元搞定域名（重头戏）仅限在校的高校学生，社会人士请自行绕开，老老实实花钱购买吧 废话少说，直接上链接看我是怎么办到的一元搞定域名还送服务器，全体咆哮。我们大家一起欢呼一起咆哮吧，哈哈哈。 云+校园计划是腾讯云为在读高校生量身打造的扶持计划，旨在为高校生提供先进的技术支持、资金扶持和经验分享。同时让更多高校生了解云计算及互联网知识，为后续职业、创业发展奠定基础。 学生们请仔细研读腾讯云官方论坛领取的规则参与领取 将独立域名与 GitHub Pages 的空间绑定DNS 设置领取到域名后进行解析，进入到我的域名管理，添加域名，如下图设置。我这里设置了一个三级域名blog，大家可以自行忽略。设置后访问的就是blog.shijinrong.cn了，不是shijinrong.cn哟~~~~ 其中A的两条记录指向的ip地址是github Pages的提供的ip 192.30.252.153 192.30.252.154 如博客不能登录，有可能是 github 更改了空间服务的 ip 地址，记得及时到在GitHub Pages查看最新的ip即可 www 指定的记录是你在 github 注册的仓库。 GitHub Pages 的设置去到你的aierui.github.io 仓库，点击 CNAME(没有自行创建) ,再点击右下角的 铅笔 编辑，将 blog.shijinrong.cn 改成你的域名 域名绑定成功，域名解析成功，因此你在浏览中输入aierui.github.io或者现在blog.shijinrong.cn均可以访问到主页。 搭建成功快和小白自己不愿动手说拜拜吧，同时也恭喜你成为博主。记得常联系我喔~~嘻嘻 日后站点的管理和运营如何更新博文下载博客模板的ZIP，去到你frok的仓库地址：https://github.com/你的用户名/你的用户名.github.io。点击右下角的Download ZIP,你会得到一个名为「你的用户名.github.io-master.zip」的压缩包。 安装 github desktop管理你的博文这里不再多赘述，可以看看官方文档，有使用说明。 图床推荐使用七牛（10G空间，免费，配合Markdown使用简单）。 MarkDown百度一大堆教程，但是我还是推荐锤子科技锤子便签做的教程。代码板块的MarkDown请读者自行学习。 参考资料[1]如何在一天之内搭建以你自己名字为域名又具备cool属性的个人博客 by wingjay（推荐）[2]一步步在GitHub上创建博客主页(全系列) by pchou（推荐）[3]使用Github Pages建独立博客 by beiyuu[4]Hexo 静态博客使用指南 by 機智的阿卡林醬（推荐）[5]如何搭建一个独立博客——简明 Github Pages与 jekyll 教程 by cnfeat（推荐）[6]网站优化：动动手指，不限于NexT主题的Hexo优化（SEO篇） by ARAO’S BLOG（推荐）[7]一步步在GitHub上创建博客主页-最新版[8]hexo你的博客 by ibruce[9+]Thanks to the powerful Baidu and Google, let me solve the problem. 关于我[## 大学生，脑洞大，敢尝试，乐意思考，有梦想，不愿随波浊流][## 爱生活，会运动，敢拼搏，敢说敢做，有爱心，知道人情世故] 这里有我更详细的简介：ABOUT 如果你还想了解更多的我和我交流，可以关注我的微信公众号「Astonep」。]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>个人域名独立博客</tag>
        <tag>10小时轻松搞定</tag>
        <tag>我的第一片新天空</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我想唠叨唠叨几句：]]></title>
    <url>%2Fa%2F16082522%2F</url>
    <content type="text"><![CDATA[此时此刻总想和大家分享点什么，心中如热血澎湃思绪万千，可却心静如水无一言可发。这也许是自我嘲笑的一种吧，呵呵；也是对自己的能力的质疑和自我价值观的一种讽刺。之前始终是不明白的，经过这几个月看来，也许是没了自信，没了方向，忘记了初心……总之现在对于我的一切看起来都是一个多么大多么可怕地荒唐的笑话。 从去年踏进哈尔滨的那一刻，也许我便踏进了这个深渊越陷越深。认为读大学无用且是在浪费自己的生命的思想一直根深蒂固在心中，因为我是一个不打算读高中如今来到了大学校园的人，被高中无实践意义过时落后的内容所压迫，一直觉得书本知识是死的，那些所谓的知识仅仅是那些学者XX家在一定范围内或者一定条件下将一定的事物的规律本因定为某一个规则，我们暂且不讨论某个知识对不对，对自身有没有益处，是否能够真正有你所需，学习该知识理论时，将我们套在那样一个狭隘的空间里固定的模式理所应该的认为，得来毫不费任何功夫，相当于把别人的东西别人的思想搬过来，拷贝到自己脑子中，按部就班的套路，让我一直觉得那样子就是一个1+1=2的过程，无法更改无可替换，在同行看来，那是他们的共同语言，在不懂看来，他们就是一个傻子做着没有任何实际意义的事情浪费自己的时间。不知道我是怎样来的熊致勃勃的信心，让自己能够瞬间变成一个虚拟化伟大的人物，认为那些都与我都无关，如果以后那天需要那个环节的知识，我应该可以在短时内的学习完并直接用在实践中，你们有没有觉得很荒唐，是的，没错，我应该，我应该可以，这简直就是个笑话。说白了，我就是不切实际不着边际好高骛远狂妄自大，呵呵，现在，经历了，也许我还是只能够呵呵，只能够沉默不语无言以对，心里也许只想着逃避不想去不愿意去面对没了勇气，有的是一直在打自己脸。 曾还对自己说，生活的价值在于你怎样使用它，而不止是复制。 是的，可惜我连复制都没有去做，所以现在看来我曾今的想法是多么的荒唐可笑。有人简单的将事情分成三个部分，看、想、做。要是这样看来我都还在停留在看的第一部分，同时对于细心的人来说，看的时候已经清楚了后面他需要的是什么吧，正因为这样，所以差距一步一步增大。我不知道说到哪里了，心里也十分乱，没有思路。那就说学习吧。 机械设计，大一，课程少，基础多，课余时间多，却一心不在学习上，惰性性特别强，效率低，不主动，不立目标，不努力。自己以为一直在做喜欢的事情，有时候也算是早出晚归。我很想做一个技能型的人，也是四年前就想去的，不愿意为那些所谓的理论去争论，想将自己的劳动力投身到实际应用中，而不是活在想象中，不想活得那么假。大一结束，脑子里留下只有空白，没有任何想法和技能性想要去表达想要去分享，就连我自己的专业我现在都解释不清楚，拿不出一件像样的事或物来。有人说，重在过程，我赞成将精彩的美好的都留下留给同付出同努力的身边，大招往往实在最后面玩家才会展现出来，使其一招毙命无法反击，所以其实更多的事情还是需要看结果的，因为只有那样也许才知道自己有几斤几两吧。 军训期间，我开始出去面试找工作，总感觉自己是大一，才大一，还有学习的机会，和其他那些来找工作的应该有些差距，但是可笑的是，没有人会问我的出身，只问我有什么能力，在我申请的这个职位我的专业技能怎么样，做过什么好的项目对这个行业有什么好的想法和自己来做有什么好的战略能够给公司带来多大的利润空间。真的，也许在他们看来我还是太幼稚太可笑。我不知道是我表达的意思不对还是面试官对我的价值观不认可。后来去过达内科技去过同城去过赶集去过海来去过如花…时间实践证明还不够合格不够优秀不是实力派，还不能受人招揽，这一路唯一在变的，只有时间，其他的也只是染上了一层层灰尘，反将其覆盖无法脱离，更无法拯救。最后累的是自己，空白的也是自己，对不起的还是自己。 在第一学年里，为爱好倾入了许多，甚至是有的时候忘却了自己主业，我也一直在找机械与新媒体是否存在这直接的关系，我要如何将这两者毫无关联的行业联系一起，只可惜涉世太浅并且对两者都还是个门外汉，什么都不懂会的太少毫无专业性的技能，总之说起来就特别像一个“乞丐”。也曾在这学期里从事校园020，只可惜小材大用知小谋大大愚若智，正式因为缺少了对问题的分析思考和问题处理的方法这些基本职业素养技能。这件事情让我对创业产生了敬畏。也许还有一件遇到后，才大彻大悟，一个连新闻都不愿相信都感觉那是在炒作的人，尽然花了若千元来购买自己仅存对一丝网络的信任，事情后，心是如此的平静，没有抱怨没有气氛没了力气。 我最恨的是我自己，每次明明我知道错了，还是无动于衷不愿用行动… 有过既往不咎，有意牢记心中。2015.08.25A stone person 喜欢我☝关注我联系:imland@outlook.com]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
</search>